services:
  # MongoDB Service
  mongo:
    image: mongo:7.0
    container_name: chat-rooms-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=chat-rooms
    networks:
      - chat-rooms-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Backend Service (NestJS)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: chat-rooms-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017/chat-rooms
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
    networks:
      - chat-rooms-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Frontend Service (Vue 3)
  front:
    build:
      context: ./front
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost:3001
        - VITE_SOCKET_URL=http://localhost:3001
    container_name: chat-rooms-front
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - chat-rooms-network

networks:
  chat-rooms-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
