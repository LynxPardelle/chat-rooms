# Chat Rooms Application Ansible Inventory

[staging]
staging-server-1 ansible_host=staging.chat-rooms.example.com ansible_user=ubuntu
staging-server-2 ansible_host=staging-2.chat-rooms.example.com ansible_user=ubuntu

[production]
prod-server-1 ansible_host=prod-1.chat-rooms.example.com ansible_user=ubuntu
prod-server-2 ansible_host=prod-2.chat-rooms.example.com ansible_user=ubuntu
prod-server-3 ansible_host=prod-3.chat-rooms.example.com ansible_user=ubuntu

[database]
db-primary ansible_host=db-primary.chat-rooms.example.com ansible_user=ubuntu
db-replica ansible_host=db-replica.chat-rooms.example.com ansible_user=ubuntu

[redis]
redis-1 ansible_host=redis-1.chat-rooms.example.com ansible_user=ubuntu
redis-2 ansible_host=redis-2.chat-rooms.example.com ansible_user=ubuntu

[monitoring]
monitoring-server ansible_host=monitoring.chat-rooms.example.com ansible_user=ubuntu

[load-balancer]
lb-1 ansible_host=lb-1.chat-rooms.example.com ansible_user=ubuntu
lb-2 ansible_host=lb-2.chat-rooms.example.com ansible_user=ubuntu

# Group variables
[staging:vars]
environment=staging
domain_name=staging.chat-rooms.example.com
ssl_enabled=true
allow_app_port=true
install_database=true
install_redis=true
monitoring_enabled=true

# Database configuration for staging
db_name=livechat_staging
db_user=livechat_staging
db_password=staging_secure_password_123

# Redis configuration
redis_password=staging_redis_password_123

# Application configuration
app_port=3001
jwt_secret=staging_jwt_secret_key_very_long_and_secure
cors_origin=https://staging.chat-rooms.example.com

# Backup settings
backup_retention_days=7
backup_s3_bucket=chat-rooms-staging-backups

[production:vars]
environment=production
domain_name=chat-rooms.example.com
ssl_enabled=true
allow_app_port=false
install_database=false  # External managed database
install_redis=false     # External managed Redis
monitoring_enabled=true

# Database configuration for production (external)
db_host=production-db.chat-rooms.rds.amazonaws.com
db_name=livechat_production
db_user=livechat_production
db_password="{{ vault_production_db_password }}"

# Redis configuration (external)
redis_host=production-redis.chat-rooms.cache.amazonaws.com
redis_password="{{ vault_production_redis_password }}"

# Application configuration
app_port=3001
jwt_secret="{{ vault_production_jwt_secret }}"
cors_origin=https://chat-rooms.example.com

# Backup settings
backup_retention_days=30
backup_s3_bucket=chat-rooms-production-backups

# Monitoring
slack_webhook_url="{{ vault_slack_webhook_url }}"

[database:vars]
install_database=true
install_redis=false
postgresql_version=15
postgresql_max_connections=200
postgresql_shared_buffers=256MB
postgresql_effective_cache_size=1GB

# Backup configuration
db_backup_schedule="0 2 * * *"
db_backup_retention_days=30

[redis:vars]
install_database=false
install_redis=true
redis_maxmemory=2gb
redis_maxmemory_policy=allkeys-lru
redis_save_points="900 1 300 10 60 10000"

[monitoring:vars]
install_database=false
install_redis=false
monitoring_enabled=true
install_prometheus=true
install_grafana=true
install_elk_stack=true

# Prometheus configuration
prometheus_retention_time=15d
prometheus_storage_path=/opt/prometheus/data

# Grafana configuration
grafana_admin_password="{{ vault_grafana_admin_password }}"
grafana_domain=monitoring.chat-rooms.example.com

# ELK Stack configuration
elasticsearch_heap_size=2g
elasticsearch_cluster_name=chat-rooms-logs
kibana_domain=logs.chat-rooms.example.com

[load-balancer:vars]
install_database=false
install_redis=false
install_haproxy=true
install_keepalived=true

# HAProxy configuration
haproxy_backend_servers:
  - name: prod-server-1
    address: "{{ hostvars['prod-server-1']['ansible_host'] }}"
    port: 3001
    check: "check"
  - name: prod-server-2
    address: "{{ hostvars['prod-server-2']['ansible_host'] }}"
    port: 3001
    check: "check"
  - name: prod-server-3
    address: "{{ hostvars['prod-server-3']['ansible_host'] }}"
    port: 3001
    check: "check"

# Keepalived configuration (for HA)
keepalived_vip=10.0.1.100
keepalived_interface=eth0
keepalived_priority_master=110
keepalived_priority_backup=100

# SSL certificates
ssl_cert_path=/etc/ssl/certs/chat-rooms.crt
ssl_key_path=/etc/ssl/private/chat-rooms.key

# Security settings
[all:vars]
# SSH hardening
ssh_port=22
ssh_permit_root_login=no
ssh_password_authentication=no
ssh_max_auth_tries=3

# Firewall settings
firewall_enabled=true
fail2ban_enabled=true

# System settings
timezone=UTC
ntp_servers:
  - 0.pool.ntp.org
  - 1.pool.ntp.org
  - 2.pool.ntp.org

# Log settings
log_level=info
log_rotation_enabled=true
log_retention_days=90

# Update settings
auto_updates_enabled=true
security_updates_only=true

# Application deployment settings
git_repo_url=https://github.com/your-org/chat-rooms.git
git_branch=main
deployment_strategy=rolling
health_check_url=/health
health_check_timeout=30

# Container settings
docker_storage_driver=overlay2
docker_log_driver=json-file
docker_log_max_size=100m
docker_log_max_file=3

# Performance tuning
max_open_files=65536
max_processes=32768
vm_max_map_count=262144

# Monitoring and alerting
metrics_retention_days=30
alert_email=ops@chat-rooms.example.com
pagerduty_integration_key="{{ vault_pagerduty_key }}"
